/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/p/{placeId}': {
    /** Ottieni informazioni su un luogo */
    get: {
      parameters: {
        path: {
          placeId: string;
        };
      };
      responses: {
        /** Informazioni sul luogo */
        200: {
          content: {
            'application/json': components['schemas']['PlaceInfo'];
          };
        };
        /** Luogo non esistente */
        444: unknown;
      };
    };
    parameters: {
      path: {
        placeId: string;
      };
    };
  };
  '/p/{placeId}/like': {
    /** mette like ad un punto */
    put: {
      parameters: {
        path: {
          placeId: string;
        };
      };
      responses: {
        /** Informazioni sul luogo */
        200: {
          content: {
            'application/json': components['schemas']['PlaceInfo'];
          };
        };
        /** Luogo non esistente */
        444: unknown;
      };
    };
    parameters: {
      path: {
        placeId: string;
      };
    };
  };
  '/p': {
    /** Crea un punto community */
    post: {
      responses: {
        /** OK */
        200: unknown;
      };
      requestBody: {
        content: {
          'application/json': {
            description: string;
            address?: string;
            lat?: string;
            lon?: string;
          };
        };
      };
    };
  };
  '/search/p': {
    /** At least one of the 'q' or the 'near' parameters is required */
    get: {
      parameters: {
        query: {
          /** The text for full text search on all fields */
          q?: string;
          /** Latitude and longitude for the search */
          near?: string;
          /** Category filter for the search */
          cat?: string;
        };
      };
      responses: {
        /** OK */
        200: {
          content: {
            'application/json': components['schemas']['PlaceList'];
          };
        };
      };
    };
  };
  '/search/location/text': {
    /** Searches the text and returns coordinates or suggestions */
    get: {
      parameters: {
        query: {
          /** the text for location search */
          text: string;
        };
      };
      responses: {
        /** OK */
        200: {
          content: {
            'application/json': components['schemas']['TextSearchResponse'];
          };
        };
      };
    };
  };
  '/search/location/position': {
    /** Searches the coordinates and returns an address */
    get: {
      parameters: {
        query: {
          /** the latitude for location search */
          lat: string;
          /** the longitude for location search */
          lon: string;
        };
      };
      responses: {
        /** OK */
        200: {
          content: {
            'application/json': components['schemas']['PositionSearchResponse'];
          };
        };
      };
    };
  };
}

export interface components {
  schemas: {
    PlaceList: {
      places?: components['schemas']['PlaceInfo'][];
    };
    PlaceInfo: {
      placeId?: string;
      istatCode?: string;
      streetName?: string;
      streetNumber?: string;
      city?: string;
      province?: string;
      notes?: string;
      lat?: string;
      lon?: string;
      searchable?: boolean;
      community?: boolean;
      likes?: number;
    };
    PositionSearchResponse: {
      address?: string;
    };
    TextSearchResponse: {
      coordinates?: {
        latitude?: string;
        longitude?: string;
      };
      suggestions?: string[];
    };
  };
}

export interface operations {}
